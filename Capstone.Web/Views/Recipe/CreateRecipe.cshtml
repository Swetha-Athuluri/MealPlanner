@using Capstone.Web.Models.ViewModels
@model RecipeViewModel

@{
    ViewBag.Title = "CreateRecipe";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #sortable, #ingred {
        list-style-type: none;
        margin: 0;
        padding: 0;
        width: 60%;
    }

        #sortable li, #ingred li {
            margin: 0 3px 3px 3px;
            padding: 0.4em;
            padding-left: 1.5em;
            font-size: 1.4em;
            height: 18px;
        }

            #sortable li span, #ingred li span {
                position: absolute;
                margin-left: -1.3em;
            }

    .ui-draggable, .ui-droppable {
        background-position: top;
    }
    .recipeCreate{
        margin: 0% 5% 15% 5%; 
    }
</style>
<div class="form-group-lg">
    @using (Html.BeginForm("CreateRecipe", "Recipe", FormMethod.Post))
    {
        <div class="recipeCreate">
            @Html.TextBoxFor(m => m.RecipeName, new { placeholder = "Enter Recipe Name", @class = "form-control form-control-lg" })
            @Html.TextAreaFor(m => m.RecipeDescription, new { placeholder = "Enter Recipe Description", @class = "form-control", @row = "3" })
            @Html.ListBox("recipeType", RecipeViewModel.RecipeTypes, new { @class = "form-group" })
            @Html.Hidden("RecipeTypes", "recipeType")
            @Html.TextBoxFor(m => m.RecipeCookTimeInMinutes, new { placeholder = "Total cook time", @class = "form-group", @id = "RecipeCookTimeInMinutes" })

            <div class="container-fluid">
                <ul id="sortable">
                    <li class="ui-state-default ingredientList recipeIngredient">
                        <h3 class="clone">Ingredients</h3>
                    </li>
                    <li></li>
                    <li></li>
                    <li class="ui-state-default">
                        <div style="display: inline-flex" id="quantityMeasurementIngredient">
                            @Html.TextBox("nextQuantity", null, new { placeholder = "Quantity", @class = "form-group", @id = "nextQuantity" })
                            @Html.DropDownList("measurementType", RecipeViewModel.Measurements, new { placeholder = "Please Select Measurement", @class = "form-group", @id = "measurementType" })
                            @Html.TextBox("nextIngredient", null, new { placeholder = "Ingredient", @class = "form-group", @id = "nextIngredient" })
                        </div>
                    </li>
                </ul>

                <ul id="sortable">
                    <li class="ui-state-default preparationSteps steps">
                        <h2>Preparation Steps</h2>
                    </li>
                    <li></li>
                    <li></li>

                    <li>
                        <p>
                            @Html.TextBox("nextStep", null, new { placeholder = "Please enter preparation steps (press ENTER after each step)", @class = "form-control form-control-lg", @id = "nextStep" })
                            <span class="glyphicon glyphicon-remove"></span>
                        </p>
                            </li>
                </ul>
            </div>
            <input type="submit" value="Create" class="createButton btn-default" autofocus>
        </div>
    }
    @*@Html.Action("UploadPhoto", "Home")*@
</div>
<script>
    var ingredientCount = 0;
    var stepNumber = 0;

    $(document).ready(function () {
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });

    $(function () {
        $("#sortable").sortable();
    });
    $("#nextStep").on('keyup', function (e) {
        if (e.keyCode == 13) {

            var lastPrepStep = $("#nextStep").last();
            var clonedPrepStep = lastPrepStep.clone();
            var insertedValue = $("#nextStep").val();
            var input = document.createElement('input');
            var prepStepName = "PrepSteps[" + stepNumber + "]";

            input.type = "hidden";
            input.name = prepStepName;
            input.value = [insertedValue];
            $("#nextStep").append(input);
            stepNumber++;
            clonedPrepStep.find("h2").html(insertedValue)
            $("#nextStep").val("");
            clonedPrepStep.insertAfter(lastPrepStep);
        }
    });
    $("#nextIngredient").on('keyup', function (e) {
        if (e.keyCode == 13) {

            var ingredient = $("#nextIngredient").val();
            var measurement = $("#measurementType").val();
            var quantity = $("#nextQuantity").val();
            var currentIngredient = $("#nextIngredient").last();
            var currentMeasurement = $("#measurementType").last();
            var currentQuantity = $("#nextQuantity").last();
            var clonedIngredient = currentIngredient.clone();
            var clonedMeasurement = currentMeasurement.clone();
            var clonedQuantity = currentQuantity.clone();

            var input = document.createElement('input');
            input.type = "hidden";
            var quantityMeasurementIngredient = "QuantityMeasurementIngredient[" + ingredientCount + "]";
            input.name = quantityMeasurementIngredient;
            input.value = [quantity, measurement, ingredient];
            $("#quantityMeasurementIngredient").append(input);
            ingredientCount++;

            currentQuantity.find("h3").html(quantity);

            $("#nextIngredient").val("");
            $("#measurementType").val("");
            $("#nextQuantity").val("");
            clonedQuantity.insertAfter(currentQuantity);
            clonedMeasurement.insertAfter(clonedQuantity);
            clonedIngredient.insertAfter(clonedMeasurement);
        }
    });

</script>


<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

